// Generated by view binder compiler. Do not edit!
package com.ironcodesoftware.wanderease.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.tabs.TabItem;
import com.google.android.material.tabs.TabLayout;
import com.ironcodesoftware.wanderease.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FragmentContainerView homeSearchFragmentContainer;

  @NonNull
  public final TabItem homeSearchTabGuide;

  @NonNull
  public final TabLayout homeSearchTabLayout;

  @NonNull
  public final TabItem homeSearchTabProduct;

  @NonNull
  public final TabItem homeSearchTabRental;

  private FragmentSearchBinding(@NonNull ConstraintLayout rootView,
      @NonNull FragmentContainerView homeSearchFragmentContainer,
      @NonNull TabItem homeSearchTabGuide, @NonNull TabLayout homeSearchTabLayout,
      @NonNull TabItem homeSearchTabProduct, @NonNull TabItem homeSearchTabRental) {
    this.rootView = rootView;
    this.homeSearchFragmentContainer = homeSearchFragmentContainer;
    this.homeSearchTabGuide = homeSearchTabGuide;
    this.homeSearchTabLayout = homeSearchTabLayout;
    this.homeSearchTabProduct = homeSearchTabProduct;
    this.homeSearchTabRental = homeSearchTabRental;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.home_search_fragmentContainer;
      FragmentContainerView homeSearchFragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (homeSearchFragmentContainer == null) {
        break missingId;
      }

      id = R.id.home_search_tab_guide;
      TabItem homeSearchTabGuide = ViewBindings.findChildViewById(rootView, id);
      if (homeSearchTabGuide == null) {
        break missingId;
      }

      id = R.id.home_search_tabLayout;
      TabLayout homeSearchTabLayout = ViewBindings.findChildViewById(rootView, id);
      if (homeSearchTabLayout == null) {
        break missingId;
      }

      id = R.id.home_search_tab_product;
      TabItem homeSearchTabProduct = ViewBindings.findChildViewById(rootView, id);
      if (homeSearchTabProduct == null) {
        break missingId;
      }

      id = R.id.home_search_tab_rental;
      TabItem homeSearchTabRental = ViewBindings.findChildViewById(rootView, id);
      if (homeSearchTabRental == null) {
        break missingId;
      }

      return new FragmentSearchBinding((ConstraintLayout) rootView, homeSearchFragmentContainer,
          homeSearchTabGuide, homeSearchTabLayout, homeSearchTabProduct, homeSearchTabRental);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
