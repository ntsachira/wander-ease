// Generated by view binder compiler. Do not edit!
package com.ironcodesoftware.wanderease.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ironcodesoftware.wanderease.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAdminNewCourierBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText adminCourierEmailEdittext;

  @NonNull
  public final EditText adminCourierMobileEditTextPhone;

  @NonNull
  public final EditText adminCourierNameEditTextText;

  @NonNull
  public final EditText adminCourierPasswordEditTextTextPassword;

  @NonNull
  public final Button adminCourierRegisterButton;

  private FragmentAdminNewCourierBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText adminCourierEmailEdittext,
      @NonNull EditText adminCourierMobileEditTextPhone,
      @NonNull EditText adminCourierNameEditTextText,
      @NonNull EditText adminCourierPasswordEditTextTextPassword,
      @NonNull Button adminCourierRegisterButton) {
    this.rootView = rootView;
    this.adminCourierEmailEdittext = adminCourierEmailEdittext;
    this.adminCourierMobileEditTextPhone = adminCourierMobileEditTextPhone;
    this.adminCourierNameEditTextText = adminCourierNameEditTextText;
    this.adminCourierPasswordEditTextTextPassword = adminCourierPasswordEditTextTextPassword;
    this.adminCourierRegisterButton = adminCourierRegisterButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAdminNewCourierBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAdminNewCourierBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_admin_new_courier, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAdminNewCourierBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.admin_courier_email_edittext;
      EditText adminCourierEmailEdittext = ViewBindings.findChildViewById(rootView, id);
      if (adminCourierEmailEdittext == null) {
        break missingId;
      }

      id = R.id.admin_courier_Mobile_editTextPhone;
      EditText adminCourierMobileEditTextPhone = ViewBindings.findChildViewById(rootView, id);
      if (adminCourierMobileEditTextPhone == null) {
        break missingId;
      }

      id = R.id.admin_courier_name_editTextText;
      EditText adminCourierNameEditTextText = ViewBindings.findChildViewById(rootView, id);
      if (adminCourierNameEditTextText == null) {
        break missingId;
      }

      id = R.id.admin_courier_password_editTextTextPassword;
      EditText adminCourierPasswordEditTextTextPassword = ViewBindings.findChildViewById(rootView, id);
      if (adminCourierPasswordEditTextTextPassword == null) {
        break missingId;
      }

      id = R.id.admin_courier_register_button;
      Button adminCourierRegisterButton = ViewBindings.findChildViewById(rootView, id);
      if (adminCourierRegisterButton == null) {
        break missingId;
      }

      return new FragmentAdminNewCourierBinding((ConstraintLayout) rootView,
          adminCourierEmailEdittext, adminCourierMobileEditTextPhone, adminCourierNameEditTextText,
          adminCourierPasswordEditTextTextPassword, adminCourierRegisterButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
