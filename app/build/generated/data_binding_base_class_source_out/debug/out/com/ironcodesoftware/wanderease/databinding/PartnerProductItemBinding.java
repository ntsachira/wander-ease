// Generated by view binder compiler. Do not edit!
package com.ironcodesoftware.wanderease.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ironcodesoftware.wanderease.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PartnerProductItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView partnerProdctCartQuantityTextView;

  @NonNull
  public final TextView partnerProductCardActiveStatusTextView;

  @NonNull
  public final TextView partnerProductCardColorTextView;

  @NonNull
  public final ImageView partnerProductCardImageView;

  @NonNull
  public final TextView partnerProductCardPriceTextView;

  @NonNull
  public final TextView partnerProductCardTitle;

  @NonNull
  public final TextView partnerProductCartCategoryTextView;

  @NonNull
  public final ImageButton productEditImageButton;

  @NonNull
  public final Switch productStateSwitch;

  private PartnerProductItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView partnerProdctCartQuantityTextView,
      @NonNull TextView partnerProductCardActiveStatusTextView,
      @NonNull TextView partnerProductCardColorTextView,
      @NonNull ImageView partnerProductCardImageView,
      @NonNull TextView partnerProductCardPriceTextView, @NonNull TextView partnerProductCardTitle,
      @NonNull TextView partnerProductCartCategoryTextView,
      @NonNull ImageButton productEditImageButton, @NonNull Switch productStateSwitch) {
    this.rootView = rootView;
    this.partnerProdctCartQuantityTextView = partnerProdctCartQuantityTextView;
    this.partnerProductCardActiveStatusTextView = partnerProductCardActiveStatusTextView;
    this.partnerProductCardColorTextView = partnerProductCardColorTextView;
    this.partnerProductCardImageView = partnerProductCardImageView;
    this.partnerProductCardPriceTextView = partnerProductCardPriceTextView;
    this.partnerProductCardTitle = partnerProductCardTitle;
    this.partnerProductCartCategoryTextView = partnerProductCartCategoryTextView;
    this.productEditImageButton = productEditImageButton;
    this.productStateSwitch = productStateSwitch;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PartnerProductItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PartnerProductItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.partner_product_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PartnerProductItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.partner_prodct_cart_quantity_textView;
      TextView partnerProdctCartQuantityTextView = ViewBindings.findChildViewById(rootView, id);
      if (partnerProdctCartQuantityTextView == null) {
        break missingId;
      }

      id = R.id.partner_product_card_active_status_textView;
      TextView partnerProductCardActiveStatusTextView = ViewBindings.findChildViewById(rootView, id);
      if (partnerProductCardActiveStatusTextView == null) {
        break missingId;
      }

      id = R.id.partner_product_card_color_textView;
      TextView partnerProductCardColorTextView = ViewBindings.findChildViewById(rootView, id);
      if (partnerProductCardColorTextView == null) {
        break missingId;
      }

      id = R.id.partner_product_card_imageView;
      ImageView partnerProductCardImageView = ViewBindings.findChildViewById(rootView, id);
      if (partnerProductCardImageView == null) {
        break missingId;
      }

      id = R.id.partner_product_card_price_textView;
      TextView partnerProductCardPriceTextView = ViewBindings.findChildViewById(rootView, id);
      if (partnerProductCardPriceTextView == null) {
        break missingId;
      }

      id = R.id.partner_product_card_title;
      TextView partnerProductCardTitle = ViewBindings.findChildViewById(rootView, id);
      if (partnerProductCardTitle == null) {
        break missingId;
      }

      id = R.id.partner_product_cart_category_textView;
      TextView partnerProductCartCategoryTextView = ViewBindings.findChildViewById(rootView, id);
      if (partnerProductCartCategoryTextView == null) {
        break missingId;
      }

      id = R.id.product_edit_imageButton;
      ImageButton productEditImageButton = ViewBindings.findChildViewById(rootView, id);
      if (productEditImageButton == null) {
        break missingId;
      }

      id = R.id.product_state_switch;
      Switch productStateSwitch = ViewBindings.findChildViewById(rootView, id);
      if (productStateSwitch == null) {
        break missingId;
      }

      return new PartnerProductItemBinding((ConstraintLayout) rootView,
          partnerProdctCartQuantityTextView, partnerProductCardActiveStatusTextView,
          partnerProductCardColorTextView, partnerProductCardImageView,
          partnerProductCardPriceTextView, partnerProductCardTitle,
          partnerProductCartCategoryTextView, productEditImageButton, productStateSwitch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
