// Generated by view binder compiler. Do not edit!
package com.ironcodesoftware.wanderease.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout;
import com.ironcodesoftware.wanderease.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPartnerProductListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CircularRevealCoordinatorLayout circularRevealCoordinatorLayout;

  @NonNull
  public final ImageView partnerNoProductsImageView;

  @NonNull
  public final ConstraintLayout partnerNoProductsImageViewContainer;

  @NonNull
  public final EditText partnerProductEditText;

  @NonNull
  public final RecyclerView partnerProductRecyclerView;

  @NonNull
  public final Button partnerProductSearchButton;

  private FragmentPartnerProductListBinding(@NonNull ConstraintLayout rootView,
      @NonNull CircularRevealCoordinatorLayout circularRevealCoordinatorLayout,
      @NonNull ImageView partnerNoProductsImageView,
      @NonNull ConstraintLayout partnerNoProductsImageViewContainer,
      @NonNull EditText partnerProductEditText, @NonNull RecyclerView partnerProductRecyclerView,
      @NonNull Button partnerProductSearchButton) {
    this.rootView = rootView;
    this.circularRevealCoordinatorLayout = circularRevealCoordinatorLayout;
    this.partnerNoProductsImageView = partnerNoProductsImageView;
    this.partnerNoProductsImageViewContainer = partnerNoProductsImageViewContainer;
    this.partnerProductEditText = partnerProductEditText;
    this.partnerProductRecyclerView = partnerProductRecyclerView;
    this.partnerProductSearchButton = partnerProductSearchButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPartnerProductListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPartnerProductListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_partner_product_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPartnerProductListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.circularRevealCoordinatorLayout;
      CircularRevealCoordinatorLayout circularRevealCoordinatorLayout = ViewBindings.findChildViewById(rootView, id);
      if (circularRevealCoordinatorLayout == null) {
        break missingId;
      }

      id = R.id.partner_no_products_imageView;
      ImageView partnerNoProductsImageView = ViewBindings.findChildViewById(rootView, id);
      if (partnerNoProductsImageView == null) {
        break missingId;
      }

      id = R.id.partner_no_products_imageView_container;
      ConstraintLayout partnerNoProductsImageViewContainer = ViewBindings.findChildViewById(rootView, id);
      if (partnerNoProductsImageViewContainer == null) {
        break missingId;
      }

      id = R.id.partner_product_editText;
      EditText partnerProductEditText = ViewBindings.findChildViewById(rootView, id);
      if (partnerProductEditText == null) {
        break missingId;
      }

      id = R.id.partner_product_recyclerView;
      RecyclerView partnerProductRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (partnerProductRecyclerView == null) {
        break missingId;
      }

      id = R.id.partner_product_search_button;
      Button partnerProductSearchButton = ViewBindings.findChildViewById(rootView, id);
      if (partnerProductSearchButton == null) {
        break missingId;
      }

      return new FragmentPartnerProductListBinding((ConstraintLayout) rootView,
          circularRevealCoordinatorLayout, partnerNoProductsImageView,
          partnerNoProductsImageViewContainer, partnerProductEditText, partnerProductRecyclerView,
          partnerProductSearchButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
