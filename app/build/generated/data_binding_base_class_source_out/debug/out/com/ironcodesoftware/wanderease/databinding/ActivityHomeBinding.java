// Generated by view binder compiler. Do not edit!
package com.ironcodesoftware.wanderease.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.ironcodesoftware.wanderease.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout deliveryMain;

  @NonNull
  public final BottomNavigationView homeBottomNavigationView;

  @NonNull
  public final FragmentContainerView homeFragmentContainer;

  @NonNull
  public final ConstraintLayout homeHeader;

  @NonNull
  public final ImageButton homeHeaderNotoficationImageButton;

  @NonNull
  public final TextView textView11;

  private ActivityHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout deliveryMain,
      @NonNull BottomNavigationView homeBottomNavigationView,
      @NonNull FragmentContainerView homeFragmentContainer, @NonNull ConstraintLayout homeHeader,
      @NonNull ImageButton homeHeaderNotoficationImageButton, @NonNull TextView textView11) {
    this.rootView = rootView;
    this.deliveryMain = deliveryMain;
    this.homeBottomNavigationView = homeBottomNavigationView;
    this.homeFragmentContainer = homeFragmentContainer;
    this.homeHeader = homeHeader;
    this.homeHeaderNotoficationImageButton = homeHeaderNotoficationImageButton;
    this.textView11 = textView11;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout deliveryMain = (ConstraintLayout) rootView;

      id = R.id.home_bottomNavigationView;
      BottomNavigationView homeBottomNavigationView = ViewBindings.findChildViewById(rootView, id);
      if (homeBottomNavigationView == null) {
        break missingId;
      }

      id = R.id.home_fragmentContainer;
      FragmentContainerView homeFragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (homeFragmentContainer == null) {
        break missingId;
      }

      id = R.id.home_header;
      ConstraintLayout homeHeader = ViewBindings.findChildViewById(rootView, id);
      if (homeHeader == null) {
        break missingId;
      }

      id = R.id.home_header_notofication_imageButton;
      ImageButton homeHeaderNotoficationImageButton = ViewBindings.findChildViewById(rootView, id);
      if (homeHeaderNotoficationImageButton == null) {
        break missingId;
      }

      id = R.id.textView11;
      TextView textView11 = ViewBindings.findChildViewById(rootView, id);
      if (textView11 == null) {
        break missingId;
      }

      return new ActivityHomeBinding((ConstraintLayout) rootView, deliveryMain,
          homeBottomNavigationView, homeFragmentContainer, homeHeader,
          homeHeaderNotoficationImageButton, textView11);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
