// Generated by view binder compiler. Do not edit!
package com.ironcodesoftware.wanderease.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.tabs.TabItem;
import com.google.android.material.tabs.TabLayout;
import com.ironcodesoftware.wanderease.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMyOrdersBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TabItem myOrderAllTabItem;

  @NonNull
  public final TabItem myOrderToReceiveTabItem;

  @NonNull
  public final TabItem myOrderToReviewTabItem;

  @NonNull
  public final FragmentContainerView myOrdersFragmentContainerView;

  @NonNull
  public final TabLayout myOrdersTabLayout;

  @NonNull
  public final Toolbar myOrdersToolbar;

  private ActivityMyOrdersBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout main, @NonNull TabItem myOrderAllTabItem,
      @NonNull TabItem myOrderToReceiveTabItem, @NonNull TabItem myOrderToReviewTabItem,
      @NonNull FragmentContainerView myOrdersFragmentContainerView,
      @NonNull TabLayout myOrdersTabLayout, @NonNull Toolbar myOrdersToolbar) {
    this.rootView = rootView;
    this.main = main;
    this.myOrderAllTabItem = myOrderAllTabItem;
    this.myOrderToReceiveTabItem = myOrderToReceiveTabItem;
    this.myOrderToReviewTabItem = myOrderToReviewTabItem;
    this.myOrdersFragmentContainerView = myOrdersFragmentContainerView;
    this.myOrdersTabLayout = myOrdersTabLayout;
    this.myOrdersToolbar = myOrdersToolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMyOrdersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMyOrdersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_my_orders, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMyOrdersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.my_order_all_tabItem;
      TabItem myOrderAllTabItem = ViewBindings.findChildViewById(rootView, id);
      if (myOrderAllTabItem == null) {
        break missingId;
      }

      id = R.id.my_order_to_receive_tabItem;
      TabItem myOrderToReceiveTabItem = ViewBindings.findChildViewById(rootView, id);
      if (myOrderToReceiveTabItem == null) {
        break missingId;
      }

      id = R.id.my_order_to_review_tabItem;
      TabItem myOrderToReviewTabItem = ViewBindings.findChildViewById(rootView, id);
      if (myOrderToReviewTabItem == null) {
        break missingId;
      }

      id = R.id.my_orders_fragment_container_view;
      FragmentContainerView myOrdersFragmentContainerView = ViewBindings.findChildViewById(rootView, id);
      if (myOrdersFragmentContainerView == null) {
        break missingId;
      }

      id = R.id.my_orders_tabLayout;
      TabLayout myOrdersTabLayout = ViewBindings.findChildViewById(rootView, id);
      if (myOrdersTabLayout == null) {
        break missingId;
      }

      id = R.id.my_orders_toolbar;
      Toolbar myOrdersToolbar = ViewBindings.findChildViewById(rootView, id);
      if (myOrdersToolbar == null) {
        break missingId;
      }

      return new ActivityMyOrdersBinding((ConstraintLayout) rootView, main, myOrderAllTabItem,
          myOrderToReceiveTabItem, myOrderToReviewTabItem, myOrdersFragmentContainerView,
          myOrdersTabLayout, myOrdersToolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
