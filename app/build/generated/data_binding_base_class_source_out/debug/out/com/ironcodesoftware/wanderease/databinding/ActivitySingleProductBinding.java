// Generated by view binder compiler. Do not edit!
package com.ironcodesoftware.wanderease.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.ironcodesoftware.wanderease.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySingleProductBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final CardView cardView2;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final ImageButton singleProductDecreaseQuantityImageButton;

  @NonNull
  public final ImageButton singleProductIncreaseQuantityImageButton;

  @NonNull
  public final TextView singleProductQuantityEditTextNumber;

  @NonNull
  public final Button singleProductViewAddtoCartButton;

  @NonNull
  public final Button singleProductViewButNowButton;

  @NonNull
  public final TextView singleProductViewColorTextView;

  @NonNull
  public final TextView singleProductViewDescriptionTextView;

  @NonNull
  public final ImageButton singleProductViewFavouritesImageButton;

  @NonNull
  public final ImageView singleProductViewImageView;

  @NonNull
  public final TextView singleProductViewNoReviewsTextView;

  @NonNull
  public final TextView singleProductViewPriceTextView;

  @NonNull
  public final TextView singleProductViewQuantityTextView;

  @NonNull
  public final RatingBar singleProductViewRatingBar;

  @NonNull
  public final TextView singleProductViewRatingTextView;

  @NonNull
  public final ViewPager2 singleProductViewReviewViewPager;

  @NonNull
  public final TextView singleProductViewTitleTextView;

  @NonNull
  public final Toolbar singleProductViewToolbar;

  @NonNull
  public final TextView textView27;

  @NonNull
  public final TextView textView29;

  private ActivitySingleProductBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView cardView, @NonNull CardView cardView2, @NonNull LinearLayout linearLayout,
      @NonNull ConstraintLayout main, @NonNull ScrollView scrollView,
      @NonNull ImageButton singleProductDecreaseQuantityImageButton,
      @NonNull ImageButton singleProductIncreaseQuantityImageButton,
      @NonNull TextView singleProductQuantityEditTextNumber,
      @NonNull Button singleProductViewAddtoCartButton,
      @NonNull Button singleProductViewButNowButton,
      @NonNull TextView singleProductViewColorTextView,
      @NonNull TextView singleProductViewDescriptionTextView,
      @NonNull ImageButton singleProductViewFavouritesImageButton,
      @NonNull ImageView singleProductViewImageView,
      @NonNull TextView singleProductViewNoReviewsTextView,
      @NonNull TextView singleProductViewPriceTextView,
      @NonNull TextView singleProductViewQuantityTextView,
      @NonNull RatingBar singleProductViewRatingBar,
      @NonNull TextView singleProductViewRatingTextView,
      @NonNull ViewPager2 singleProductViewReviewViewPager,
      @NonNull TextView singleProductViewTitleTextView, @NonNull Toolbar singleProductViewToolbar,
      @NonNull TextView textView27, @NonNull TextView textView29) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.cardView2 = cardView2;
    this.linearLayout = linearLayout;
    this.main = main;
    this.scrollView = scrollView;
    this.singleProductDecreaseQuantityImageButton = singleProductDecreaseQuantityImageButton;
    this.singleProductIncreaseQuantityImageButton = singleProductIncreaseQuantityImageButton;
    this.singleProductQuantityEditTextNumber = singleProductQuantityEditTextNumber;
    this.singleProductViewAddtoCartButton = singleProductViewAddtoCartButton;
    this.singleProductViewButNowButton = singleProductViewButNowButton;
    this.singleProductViewColorTextView = singleProductViewColorTextView;
    this.singleProductViewDescriptionTextView = singleProductViewDescriptionTextView;
    this.singleProductViewFavouritesImageButton = singleProductViewFavouritesImageButton;
    this.singleProductViewImageView = singleProductViewImageView;
    this.singleProductViewNoReviewsTextView = singleProductViewNoReviewsTextView;
    this.singleProductViewPriceTextView = singleProductViewPriceTextView;
    this.singleProductViewQuantityTextView = singleProductViewQuantityTextView;
    this.singleProductViewRatingBar = singleProductViewRatingBar;
    this.singleProductViewRatingTextView = singleProductViewRatingTextView;
    this.singleProductViewReviewViewPager = singleProductViewReviewViewPager;
    this.singleProductViewTitleTextView = singleProductViewTitleTextView;
    this.singleProductViewToolbar = singleProductViewToolbar;
    this.textView27 = textView27;
    this.textView29 = textView29;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySingleProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySingleProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_single_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySingleProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.cardView2;
      CardView cardView2 = ViewBindings.findChildViewById(rootView, id);
      if (cardView2 == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.scrollView;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.single_product_decrease_quantity_imageButton;
      ImageButton singleProductDecreaseQuantityImageButton = ViewBindings.findChildViewById(rootView, id);
      if (singleProductDecreaseQuantityImageButton == null) {
        break missingId;
      }

      id = R.id.single_product_increase_quantity_imageButton;
      ImageButton singleProductIncreaseQuantityImageButton = ViewBindings.findChildViewById(rootView, id);
      if (singleProductIncreaseQuantityImageButton == null) {
        break missingId;
      }

      id = R.id.single_product_quantity_editTextNumber;
      TextView singleProductQuantityEditTextNumber = ViewBindings.findChildViewById(rootView, id);
      if (singleProductQuantityEditTextNumber == null) {
        break missingId;
      }

      id = R.id.single_product_view_addto_cart_button;
      Button singleProductViewAddtoCartButton = ViewBindings.findChildViewById(rootView, id);
      if (singleProductViewAddtoCartButton == null) {
        break missingId;
      }

      id = R.id.single_product_view_butNow_button;
      Button singleProductViewButNowButton = ViewBindings.findChildViewById(rootView, id);
      if (singleProductViewButNowButton == null) {
        break missingId;
      }

      id = R.id.single_product_view_color_textView;
      TextView singleProductViewColorTextView = ViewBindings.findChildViewById(rootView, id);
      if (singleProductViewColorTextView == null) {
        break missingId;
      }

      id = R.id.single_product_view_description_textView;
      TextView singleProductViewDescriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (singleProductViewDescriptionTextView == null) {
        break missingId;
      }

      id = R.id.single_product_view_favourites_imageButton;
      ImageButton singleProductViewFavouritesImageButton = ViewBindings.findChildViewById(rootView, id);
      if (singleProductViewFavouritesImageButton == null) {
        break missingId;
      }

      id = R.id.single_product_view_imageView;
      ImageView singleProductViewImageView = ViewBindings.findChildViewById(rootView, id);
      if (singleProductViewImageView == null) {
        break missingId;
      }

      id = R.id.single_product_view_no_reviews_textView;
      TextView singleProductViewNoReviewsTextView = ViewBindings.findChildViewById(rootView, id);
      if (singleProductViewNoReviewsTextView == null) {
        break missingId;
      }

      id = R.id.single_product_view_price_textView;
      TextView singleProductViewPriceTextView = ViewBindings.findChildViewById(rootView, id);
      if (singleProductViewPriceTextView == null) {
        break missingId;
      }

      id = R.id.single_product_view__quantity_textView;
      TextView singleProductViewQuantityTextView = ViewBindings.findChildViewById(rootView, id);
      if (singleProductViewQuantityTextView == null) {
        break missingId;
      }

      id = R.id.single_product_view_ratingBar;
      RatingBar singleProductViewRatingBar = ViewBindings.findChildViewById(rootView, id);
      if (singleProductViewRatingBar == null) {
        break missingId;
      }

      id = R.id.single_product_view_rating_textView;
      TextView singleProductViewRatingTextView = ViewBindings.findChildViewById(rootView, id);
      if (singleProductViewRatingTextView == null) {
        break missingId;
      }

      id = R.id.single_product_view_review_viewPager;
      ViewPager2 singleProductViewReviewViewPager = ViewBindings.findChildViewById(rootView, id);
      if (singleProductViewReviewViewPager == null) {
        break missingId;
      }

      id = R.id.single_product_view_title_textView;
      TextView singleProductViewTitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (singleProductViewTitleTextView == null) {
        break missingId;
      }

      id = R.id.single_product_view_toolbar;
      Toolbar singleProductViewToolbar = ViewBindings.findChildViewById(rootView, id);
      if (singleProductViewToolbar == null) {
        break missingId;
      }

      id = R.id.textView27;
      TextView textView27 = ViewBindings.findChildViewById(rootView, id);
      if (textView27 == null) {
        break missingId;
      }

      id = R.id.textView29;
      TextView textView29 = ViewBindings.findChildViewById(rootView, id);
      if (textView29 == null) {
        break missingId;
      }

      return new ActivitySingleProductBinding((ConstraintLayout) rootView, cardView, cardView2,
          linearLayout, main, scrollView, singleProductDecreaseQuantityImageButton,
          singleProductIncreaseQuantityImageButton, singleProductQuantityEditTextNumber,
          singleProductViewAddtoCartButton, singleProductViewButNowButton,
          singleProductViewColorTextView, singleProductViewDescriptionTextView,
          singleProductViewFavouritesImageButton, singleProductViewImageView,
          singleProductViewNoReviewsTextView, singleProductViewPriceTextView,
          singleProductViewQuantityTextView, singleProductViewRatingBar,
          singleProductViewRatingTextView, singleProductViewReviewViewPager,
          singleProductViewTitleTextView, singleProductViewToolbar, textView27, textView29);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
