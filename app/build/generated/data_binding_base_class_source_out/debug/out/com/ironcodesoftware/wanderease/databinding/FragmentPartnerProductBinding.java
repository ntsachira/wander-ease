// Generated by view binder compiler. Do not edit!
package com.ironcodesoftware.wanderease.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.ironcodesoftware.wanderease.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPartnerProductBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FrameLayout frameLayout;

  @NonNull
  public final Button newProductButtonSaveProduct;

  @NonNull
  public final Button newProductButtonUploadImage;

  @NonNull
  public final ImageButton newProductCancelImageButton;

  @NonNull
  public final TextInputEditText newProductColor;

  @NonNull
  public final TextInputEditText newProductDescription;

  @NonNull
  public final ImageView newProductImageView;

  @NonNull
  public final TextInputEditText newProductPrice;

  @NonNull
  public final TextInputEditText newProductQuantity;

  @NonNull
  public final TextInputEditText newProductTitle;

  @NonNull
  public final Spinner nreProductCategorySpinner;

  @NonNull
  public final TextInputLayout textInputLayout;

  @NonNull
  public final TextInputLayout textInputLayoutProductColor;

  @NonNull
  public final TextInputLayout textInputLayoutProductDescription;

  @NonNull
  public final TextInputLayout textInputLayoutProductPrice;

  @NonNull
  public final TextInputLayout textInputLayoutProducttitle;

  private FragmentPartnerProductBinding(@NonNull ConstraintLayout rootView,
      @NonNull FrameLayout frameLayout, @NonNull Button newProductButtonSaveProduct,
      @NonNull Button newProductButtonUploadImage, @NonNull ImageButton newProductCancelImageButton,
      @NonNull TextInputEditText newProductColor, @NonNull TextInputEditText newProductDescription,
      @NonNull ImageView newProductImageView, @NonNull TextInputEditText newProductPrice,
      @NonNull TextInputEditText newProductQuantity, @NonNull TextInputEditText newProductTitle,
      @NonNull Spinner nreProductCategorySpinner, @NonNull TextInputLayout textInputLayout,
      @NonNull TextInputLayout textInputLayoutProductColor,
      @NonNull TextInputLayout textInputLayoutProductDescription,
      @NonNull TextInputLayout textInputLayoutProductPrice,
      @NonNull TextInputLayout textInputLayoutProducttitle) {
    this.rootView = rootView;
    this.frameLayout = frameLayout;
    this.newProductButtonSaveProduct = newProductButtonSaveProduct;
    this.newProductButtonUploadImage = newProductButtonUploadImage;
    this.newProductCancelImageButton = newProductCancelImageButton;
    this.newProductColor = newProductColor;
    this.newProductDescription = newProductDescription;
    this.newProductImageView = newProductImageView;
    this.newProductPrice = newProductPrice;
    this.newProductQuantity = newProductQuantity;
    this.newProductTitle = newProductTitle;
    this.nreProductCategorySpinner = nreProductCategorySpinner;
    this.textInputLayout = textInputLayout;
    this.textInputLayoutProductColor = textInputLayoutProductColor;
    this.textInputLayoutProductDescription = textInputLayoutProductDescription;
    this.textInputLayoutProductPrice = textInputLayoutProductPrice;
    this.textInputLayoutProducttitle = textInputLayoutProducttitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPartnerProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPartnerProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_partner_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPartnerProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.frameLayout;
      FrameLayout frameLayout = ViewBindings.findChildViewById(rootView, id);
      if (frameLayout == null) {
        break missingId;
      }

      id = R.id.new_product_button_save_product;
      Button newProductButtonSaveProduct = ViewBindings.findChildViewById(rootView, id);
      if (newProductButtonSaveProduct == null) {
        break missingId;
      }

      id = R.id.new_product_button_upload_Image;
      Button newProductButtonUploadImage = ViewBindings.findChildViewById(rootView, id);
      if (newProductButtonUploadImage == null) {
        break missingId;
      }

      id = R.id.new_product_cancel_imageButton;
      ImageButton newProductCancelImageButton = ViewBindings.findChildViewById(rootView, id);
      if (newProductCancelImageButton == null) {
        break missingId;
      }

      id = R.id.new_product_color;
      TextInputEditText newProductColor = ViewBindings.findChildViewById(rootView, id);
      if (newProductColor == null) {
        break missingId;
      }

      id = R.id.new_product_description;
      TextInputEditText newProductDescription = ViewBindings.findChildViewById(rootView, id);
      if (newProductDescription == null) {
        break missingId;
      }

      id = R.id.new_product_imageView;
      ImageView newProductImageView = ViewBindings.findChildViewById(rootView, id);
      if (newProductImageView == null) {
        break missingId;
      }

      id = R.id.new_product_price;
      TextInputEditText newProductPrice = ViewBindings.findChildViewById(rootView, id);
      if (newProductPrice == null) {
        break missingId;
      }

      id = R.id.new_product_quantity;
      TextInputEditText newProductQuantity = ViewBindings.findChildViewById(rootView, id);
      if (newProductQuantity == null) {
        break missingId;
      }

      id = R.id.new_product_title;
      TextInputEditText newProductTitle = ViewBindings.findChildViewById(rootView, id);
      if (newProductTitle == null) {
        break missingId;
      }

      id = R.id.nre_product_category_spinner;
      Spinner nreProductCategorySpinner = ViewBindings.findChildViewById(rootView, id);
      if (nreProductCategorySpinner == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      TextInputLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      id = R.id.textInputLayout_product_color;
      TextInputLayout textInputLayoutProductColor = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutProductColor == null) {
        break missingId;
      }

      id = R.id.textInputLayout_product_description;
      TextInputLayout textInputLayoutProductDescription = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutProductDescription == null) {
        break missingId;
      }

      id = R.id.textInputLayout_product_price;
      TextInputLayout textInputLayoutProductPrice = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutProductPrice == null) {
        break missingId;
      }

      id = R.id.textInputLayout_Producttitle;
      TextInputLayout textInputLayoutProducttitle = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutProducttitle == null) {
        break missingId;
      }

      return new FragmentPartnerProductBinding((ConstraintLayout) rootView, frameLayout,
          newProductButtonSaveProduct, newProductButtonUploadImage, newProductCancelImageButton,
          newProductColor, newProductDescription, newProductImageView, newProductPrice,
          newProductQuantity, newProductTitle, nreProductCategorySpinner, textInputLayout,
          textInputLayoutProductColor, textInputLayoutProductDescription,
          textInputLayoutProductPrice, textInputLayoutProducttitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
